name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: news-crawler
  DOCKER_COMPOSE_PATH: /data/news-crawler/docker-compose.yml

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: |
          npm run test

  build-and-push:
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-24.04
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            # Update image tag in docker-compose.yml
            sed -i 's|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|' ${{ env.DOCKER_COMPOSE_PATH }}
            
            # Deploy using docker compose
            cd $(dirname ${{ env.DOCKER_COMPOSE_PATH }})
            docker compose pull
            docker compose up -d
            
            # Wait for deployment to complete
            timeout=300
            sleep 5
            while [ $timeout -gt 0 ]; do
              if docker compose ps app | grep -q "Up"; then
                echo "Deployment completed successfully"
                exit 0
              fi
              sleep 5
              timeout=$((timeout-5))
            done
            echo "Deployment timeout"
            exit 1